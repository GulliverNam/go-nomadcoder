package main

import (
	"fmt"
	"time"
)

func main() {
	/* 3-3. go routines */
	// go routines is alive during the main function working
	// go nameCount("nico")
	// go nameCount("giwon") // there is noting for the main function to do
	// nameCount("giwon") // main function counting nameCount("giwon") fucntion

	/* 3-4. channel */
	// chennel is the way to communicate with the main function or another go routines from go routines
	c := make(chan string)
	people := [5]string{"nico", "giwon", "aaaaa", "bbbbb", "ccccc"}
	for _, person := range people {
		go isName(person, c)
	}
	for i := 0; i < len(people); i++ {
		fmt.Print("waiting for ", i)
		fmt.Println(<-c) // receive message & blocking operation - waiting result
	}
}

func isName(person string, c chan string) {
	time.Sleep(time.Second * 10)
	c <- person + " is name" // send messages
}

func nameCount(persion string) {
	for i := 0; i < 10; i++ {
		fmt.Println(persion, "is me", i)
		time.Sleep(time.Second)
	}
}
